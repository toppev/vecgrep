name: release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact: vecgrep-linux-x86_64
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            artifact: vecgrep-linux-aarch64
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact: vecgrep-darwin-x86_64
          - os: macos-latest
            target: aarch64-apple-darwin
            artifact: vecgrep-darwin-aarch64

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}
      - name: Install cross-compiler toolchain for aarch64 (Ubuntu)
        if: matrix.os == 'ubuntu-latest' && matrix.target == 'aarch64-unknown-linux-gnu'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            gcc-aarch64-linux-gnu \
            libc6-dev-arm64-cross \
            pkg-config
      - name: Configure cross linker and pkg-config for aarch64
        if: matrix.os == 'ubuntu-latest' && matrix.target == 'aarch64-unknown-linux-gnu'
        run: |
          echo "CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER=aarch64-linux-gnu-gcc" >> $GITHUB_ENV
          echo "CC_aarch64_unknown_linux_gnu=aarch64-linux-gnu-gcc" >> $GITHUB_ENV
          echo "AR_aarch64_unknown_linux_gnu=aarch64-linux-gnu-ar" >> $GITHUB_ENV
          echo "PKG_CONFIG_ALLOW_CROSS=1" >> $GITHUB_ENV
      - name: Build
        run: |
          cargo build --release --target ${{ matrix.target }}
      - name: Package
        run: |
          BIN=vecgrep
          OUT=${{ matrix.artifact }}
          mkdir -p dist
          cp target/${{ matrix.target }}/release/${BIN} dist/${BIN}
          tar -czf dist/${OUT}.tar.gz -C dist ${BIN}
      - name: Upload
        uses: softprops/action-gh-release@v2
        with:
          files: dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
